Q. Write a program to check if all the brackets are closed in a given code snippet.


import java.util.*;
public class Main {
	static boolean areBracketsBalanced(String expr)
	{
		Deque<Character> stack = new ArrayDeque<Character>();
		for (int i = 0; i < expr.length(); i++)
		{
			char x = expr.charAt(i);
			if (x == '(' || x == '[' || x == '{')
			{
				stack.push(x);
				continue;
			}
			if (stack.isEmpty())
				return false;
			char check;
			switch (x) {
			case ')':
				check = stack.pop();
				if (check == '{' || check == '[')
					return false;
				break;
			case '}':
				check = stack.pop();
				if (check == '(' || check == '[')
					return false;
				break;
			case ']':
				check = stack.pop();
				if (check == '(' || check == '{')
					return false;
				break;
			}
		}
		return (stack.isEmpty());
	}
	public static void main(String[] args)
	{
		String expr = "([{}])";
		if (areBracketsBalanced(expr))
			System.out.println("The expression is Balanced ");
		else
			System.out.println("The expression is not Balanced ");
	}
}


O/P:
The expression is Balanced 

